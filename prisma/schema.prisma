// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  username      String         @unique
  email         String?        @unique
  passwordHash  String?
  isGuest       Boolean        @default(false)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  sessions      Session[]
  playerData    PlayerData?
  leadingSquads Squad[]        @relation("SquadLeader")
  squadMembers  SquadMember[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PlayerData {
  id        String   @id @default(uuid())
  userId    String   @unique
  gameData  Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Squad {
  id        String        @id @default(uuid())
  code      String        @unique
  leaderId  String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  leader    User          @relation("SquadLeader", fields: [leaderId], references: [id], onDelete: Cascade)
  members   SquadMember[]
}

model SquadMember {
  id        String   @id @default(uuid())
  squadId   String
  userId    String
  joinedAt  DateTime @default(now())
  squad     Squad    @relation(fields: [squadId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([squadId, userId])
}
